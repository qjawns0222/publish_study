const fs = require('fs');
const path = require('path');

const examples = [
  {id: 'S011', title: 'Í∏∞Î≥∏ ÏûÖÎ†• Ìèº', needsFix: false},
  {id: 'S012', title: 'Î°úÍ∑∏Ïù∏ Ìèº', needsFix: false},
  {id: 'S013', title: 'Í≤ÄÏÉâÏ∞Ω', needsFix: false},
  {id: 'S014', title: 'Ï≤¥ÌÅ¨Î∞ïÏä§ÏôÄ ÎùºÎîîÏò§', needsFix: true},
  {id: 'S015', title: 'ÏÑ†ÌÉù Î∞ïÏä§', needsFix: true},
  {id: 'S016', title: 'ÌûàÏñ¥Î°ú ÏÑπÏÖò', needsFix: true},
  {id: 'S017', title: 'Ïù¥ÎØ∏ÏßÄ Í∞§Îü¨Î¶¨', needsFix: true},
  {id: 'S018', title: 'ÏÉÅÌíà Ïπ¥Îìú', needsFix: true},
  {id: 'S019', title: 'Ìë∏ÌÑ∞ ÎîîÏûêÏù∏', needsFix: true},
  {id: 'S020', title: 'Ïª¨Îü¨ ÌåîÎ†àÌä∏', needsFix: false}
];

console.log('üìã S011-S020 Í≤ÄÌÜ† Í≤∞Í≥º:\n');

examples.forEach(ex => {
  const filePath = path.join(__dirname, ex.id, 'C-answer.html');

  if (fs.existsSync(filePath)) {
    const content = fs.readFileSync(filePath, 'utf-8');
    const size = content.length;
    const hasContainer = content.includes('container') || content.includes('min-height: 100vh');
    const hasHover = content.includes(':hover');

    const status = hasContainer && hasHover && size > 2500 ? '‚úÖ' : '‚ö†Ô∏è ';

    console.log(`${status} ${ex.id} - ${ex.title}`);
    console.log(`   Size: ${size} bytes | Container: ${hasContainer} | Hover: ${hasHover}`);

    if (ex.needsFix || (!hasContainer && size < 3000)) {
      console.log(`   üëâ Í∞úÏÑ† ÌïÑÏöî`);
    }
    console.log('');
  }
});

console.log('\nüí° ÏàòÏ†ï Ï∂îÏ≤ú:');
console.log('  - S014: Ï≤¥ÌÅ¨Î∞ïÏä§/ÎùºÎîîÏò§ Ïª§Ïä§ÌÖÄ Ïä§ÌÉÄÏùº Ï∂îÍ∞Ä');
console.log('  - S015: ÏÑ†ÌÉù Î∞ïÏä§ ÌôîÏÇ¥Ìëú ÏïÑÏù¥ÏΩò Ï∂îÍ∞Ä');
console.log('  - S016: ÌûàÏñ¥Î°ú ÏÑπÏÖò Î∞∞Í≤Ω Ïù¥ÎØ∏ÏßÄ + ÌÖçÏä§Ìä∏');
console.log('  - S017: Ïù¥ÎØ∏ÏßÄ Í∞§Îü¨Î¶¨ Grid + Hover');
console.log('  - S018: ÏÉÅÌíà Ïπ¥Îìú ÏôÑÏÑ±');
console.log('  - S019: Ìë∏ÌÑ∞ ÏôÑÏ†ÑÌïú Î†àÏù¥ÏïÑÏõÉ');
